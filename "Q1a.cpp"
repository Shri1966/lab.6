#include <iostream>
using namespace std;

//Function to search an element of a sorted array.
int binarySrh(int a[50],int frst, int last,int num)
{
	
	while(frst<=last) 
	//To run the loop 
	{
	int mid=(frst+last)/2; 
	if(a[mid]==num)      
   {
   	return mid+1;
   }
   else if(num<a[mid])
   //Checking if the number is smaller than the middle element.
   {       if(a[0]<a[1])
   // To check whether the array is ascending or descending
   	{
   		last=mid-1;//If ascending this will be followed
   	}
   	else
   	 frst=mid+1; //If descending this will be followed
   }
   else //Checking if the number is greater than middle element
   {    
   	if(a[0]<a[1])
   	//To check whether the array is ascending or descending
          {
          	//If ascending this will be followed
          	frst=mid+1;
          }
          else
          //If descending, this will be followed
          last=mid-1;
   }
	}
	return -1;
}

//main function for implementation and execution
int main() {
int arr[100],n,num,pos;
cout<<"Enter the size of array:";
cin>>n;
cout<<n;
cout<<"\nEnter the elements of array in sorted order(ascending or descending).";
cout<<"\nThe array is:";
for (int i=0;i<n;i++) 
{
	cin>>arr[i];
	cout<<arr[i]<<" ";
}
cout<<"\nEnter the element to be searched:";
cin>>num;
cout<<num;

int frst=0;//initializing beg as 0 i.e the position of 1st element.
int last=n-1;//initializing end as n-1 i.e the position of last element.

pos=binarySrh(arr,frst,last,num);
//Calling the funtion to do binary search.

if(pos==-1)
cout<<"\nThe element is not found.";
else
cout<<"\nElement found at "<<pos<<" th position";
//printing the position of the element

	return 0;
}
